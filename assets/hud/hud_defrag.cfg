#include "HUD/include/include.cfg"

#define	CHAR_X 	14
#define	CHAR_Y 	16

	INFO
	{
		name 		"Defrag q3 arena" 	// name as it appeared in Select HUD menu
		author 		"GUNNM"				// author of the HUD file
		description "Defrag q3 arena"	// short description
	}

	SetCvar
	{
		cg_drawWeaponSelect 	0 // 0: hide weapon list | 1: horizontal & name | 2: horizontal & ammo | 3: vertical
		cg_drawAttacker			1
		cg_drawTeamOverlay 		1
		cg_drawCrosshairNames 	1
		cg_drawIcons			1
		cg_draw3dIcons 			0
		cg_drawFPS 				1
		cg_drawSpeed			1
		cg_drawTimer			1
		cg_lagometer			0
		cg_drawPing				0
		cg_drawSnapshot			0
		cg_drawStatus 			1
		cg_drawRewards			1
		cg_drawAmmoWarning		1
		cg_drawCrosshair		1
	}
	
	//==========================
	// Colors
	//==========================
	HealthColors
	{
		color 1.0, 0.69, 0.0, 1.0	// normal 			(>25 & > 0 red/yellow flashing)
		color 1.0, 0.2,  0.2, 1.0	// low health		(<= 0 & > 0 red/yellow flashing)
		color 0.5, 0.5,  0.5, 1.0	// weapon firing    (?)
		color 1.0, 1.0,  1.0, 1.0	// health > 100		(>100)
	}
	
	ArmorColors
	{
		color 1.0, 0.69, 0.0, 1.0 // normal			(yellow)
		color 1.0, 0.2,  0.2, 1.0 // low value		(red)
		color 0.5, 0.5,  0.5, 1.0 // value > 0 		(grey)
		color 1.0, 1.0,  1.0, 1.0 // value > 100	(white)
	}
	
	AmmoColors
	{
		color 1.0, 0.69, 0.0, 1.0	// normal
		color 1.0, 0.2,  0.2, 1.0	// low value
		color 0.5, 0.5,  0.5, 1.0	// value > 0
		color 1.0, 1.0,  1.0, 1.0	// value > 100
	}
	
	TeamsColors
	{
		color 0.5, 0.5, 0.5, 0.33	// colorGreyTeam (spectator?)
		color 1, 0, 0, 0.33			// colorRedTeam
		color 0, 0, 1, 0.33			// colorBlueTeam
		color 0, 1, 0, 0.33			// colorOtherTeam (green)

	}
	//==========================
	// GameType icons (not use here in classic q3a)
	//==========================
	GameTypeIcons
	{
		background "hud/quakeLive/ffa"	// free for all GT_FFA
		background "hud/quakeLive/duel"	// one on one tournament GT_TOURNAMENT
		background "hud/quakeLive/ffa"	// single player ffa GT_SINGLE_PLAYER
		background "hud/quakeLive/tdm"	// team deathmatch GT_TEAM
		background "hud/quakeLive/ctf"	// capture the flag GT_CTF
	}
	
	//==========================
	// Crosshair TODO
	//==========================
	Crosshair
	{
		//rect NULL NULL NULL NULL
		cvarTest "cg_drawCrosshair"
		visible !VIS_IN_MENU
	}

	//==========================
	// Time (left one)
	//==========================
	itemDef {
		name "TimeBackground"
		rect 4 200 116 32
		background "hud/defrag/116x32_inner.tga"
		backcolor 0 0 1 0.33
	}
	
	itemDef {
		name "TimeBorder"
		rect 4 200 116 32
		background "hud/defrag/116x32_border.tga"
		backcolor 0 0 1 1
	}

	itemDef {
		name "TimeValue"
		rect 28 208 116 32
		caption VAL_TIMER
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		shadow
		param 1
	}

	//==========================
	// Speed (left one)
	//==========================
	itemDef {
		name "SpeedBackground"
		rect 4 244 116 32
		background "hud/defrag/116x32_inner.tga"
		backcolor 0 0 1 0.33
	}
	
	itemDef {
		name "SpeedBorder"
		rect 4 244 116 32
		background "hud/defrag/116x32_border.tga"
		backcolor 0 0 1 1
	}

	itemDef {
		name "SpeedValue"
		rect 76 252 116 32
		caption VAL_SPEED
		param 1 // no unit
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		textAlign Right
		shadow
	}

	itemDef {
		name "SpeedUnit"
		caption "u"
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		parent "SpeedValue"
		anchors Right Middle
		shadow
	}

	//==========================
	// Time (bottom right one)
	//==========================
	itemDef {
		name "TimeBackgroundB"
		rect 500 440 116 32
		background "hud/defrag/116x32_inner.tga"
		backcolor 0 0 1 0.33
	}
	
	itemDef {
		name "TimeBorderB"
		rect 500 440 116 32
		background "hud/defrag/116x32_border.tga"
		backcolor 0 0 1 1
	}

	itemDef {
		name "TimeValueB"
		rect 524 448 116 32
		caption VAL_TIMER
		param 1
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		shadow
	}

	//==========================
	// Pickup Item
	// visible only if no powerUp
	//==========================
	itemDef {
		name "PickupItemBackground"
		background "hud/defrag/78x32_inner.tga"
		rect 6 438 128 32
		backcolor 0 0 1 0.33
	}

	itemDef {
		name "PickupItemBorder"
		background "hud/defrag/78x32_border.tga"
		rect 6 438 128 32
		backcolor 0 0 1 1
	}

	Icon_ItemPickup
	{
		rect 16 446 16 16
		backcolor 1 0 0 1
		visible !VIS_POWERUP_1
	}

	ItemPickup
	{
		rect 20 0 0 0
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		proportional
		parent Icon_ItemPickup
		anchors Right Middle
		shadow
		param 1
		visible !VIS_POWERUP_1
	}
	
	
	//==========================
	// PowerUp
	//==========================
	
	PowerUpCounter // this one call Icon_PowerUp drawn. It should alway be place before Icon_PowerUp, even if visible 0
	{
		rect 32 446 0 0
		fontsize CHAR_X CHAR_Y
		forecolor 1 1 1 1
		proportional
		shadow
		pulseScale PULSE_SCALE
	}
	
	Icon_PowerUp
	{
		rect NULL NULL 16 16
		anchors Left Middle
		parent PowerUpCounter
	}

	//==========================
	// Health
	//==========================
	itemDef {
		name "HealthBackground"
		background "hud/defrag/78x32_inner.tga"
		rect 94 438 152 32
		backcolor 0 0 1 0.33
	}

	itemDef {
		name "HealthBorder"
		background "hud/defrag/78x32_border.tga"
		rect 94 438 152 32
		backcolor 0 0 1 1
	}

	itemDef {
		name "HealthIcon"
		background "hud/defrag/health.tga"
		rect 104 446 16 16
		backcolor 1 0 0 1
	}
	
	itemDef
	{
		name "HealthValue"
		rect 56 0 0 0
		font numbers
		fontsize CHAR_X CHAR_Y
		textAlign R
		proportional
		forecolor 1 1 1 1
		blink
		caption VAL_HEALTH
		cvarTest "cg_drawStatus"
		parent "HealthIcon"
		anchors Right Middle
		shadow
	}		
	
	//==========================
	// Armor
	//==========================
	itemDef {
		name "ArmorBackground"
		background "hud/defrag/78x32_inner.tga"
		rect 200 438 152 32
		backcolor 0 0 1 0.33
		visible VAL_ARMOR
	}

	itemDef {
		name "ArmorBorder"
		background "hud/defrag/78x32_border.tga"
		rect 200 438 152 32
		backcolor 0 0 1 1
		visible VAL_ARMOR
	}
	
	itemDef {
		name "ArmorIcon"
		background "hud/CPMA_gfx/icons/iconr_yellow.tga"
		rect 210 446 16 16
		visible VAL_ARMOR
	}
	
	itemDef
	{
		name "ArmorValue"
		rect 70 0 0 0
		font numbers
		fontsize CHAR_X CHAR_Y
		textAlign R
		proportional
		forecolor 1 1 1 1
		blink
		caption VAL_ARMOR
		cvarTest "cg_drawStatus"
		parent "ArmorIcon"
		anchors Right Middle
		shadow
		visible !VIS_ZERO_VALUE
	}	
	
	//==========================
	// Ammo
	//==========================
	itemDef {
		name "AmmoBackground"
		background "hud/defrag/78x32_inner.tga"
		rect 305 438 152 32
		backcolor 0 0 1 0.33
	}

	itemDef {
		name "AmmoBorder"
		background "hud/defrag/78x32_border.tga"
		rect 305 438 152 32
		backcolor 0 0 1 1
	}

	itemDef
	{
		name "AmmoIcon"
		rect 314 446 16 16
		background ICON_AMMO
		cvarTest "cg_drawStatus"
	}

	itemDef
	{
		name "AmmoCount"
		rect 50 0 0 0
		font numbers
		fontsize CHAR_X CHAR_Y
		textAlign R
		proportional
		forecolor 1 1 1 1
		caption VAL_AMMO
		cvarTest "cg_drawStatus"
		parent "AmmoIcon"
		anchors Right Middle
		shadow
	}

	//==========================
	// Speed gradient (center)
	//==========================
	#define	SpeedGradientSize 	200
	
	itemDef
	{
		name "SpeedGradientBackground"
		rect 220 300 200 16
		background "hud/defrag/126x32_inner.tga"
		backcolor 0 0 1 0.33
		visible !VIS_IN_MENU !VIS_IN_SCORE
	}
	
	itemDef
	{
		name "SpeedGradient"
		rect 220 300 200 16
		background "hud/defrag/126x32_inner.tga"
		backcolor 1 1 1 0.3
		//fill
		gradient VAL_SPEED
		visible !VIS_IN_MENU !VIS_IN_SCORE
	}
	
	itemDef {
		name "SpeedGradientBorder"
		background "hud/defrag/126x32_border.tga"
		rect 220 300 200 16
		backcolor 0 0 1 1
		visible !VIS_IN_MENU !VIS_IN_SCORE
	}

	//==========================
	// Icons
	//==========================

	/*itemDef
	{
		name "StatusBar_ArmorIcon"
		rect $evalint(370 + GIANTCHAR_WIDTH*3 + TEXT_ICON_SPACE) $evalint(SCREEN_Y_MAX + 1 - GIANTCHAR_HEIGHT) ICON_SIZE ICON_SIZE
		cvarTest "cg_drawStatus"
		background ICON_ARMOR
	}

	Icon_WeaponList
	{
		rect NULL NULL ICON_WEAPON_SELECT_WIDTH ICON_WEAPON_SELECT_HEIGHT // hardcoded 32 32
	}
	
	Icon_WeaponList_Selected
	{
		rect NULL NULL $evalint(ICON_WEAPON_SELECT_WIDTH + 8) $evalint(ICON_WEAPON_SELECT_HEIGHT + 8) 	// hardcoded 32+8, 32+8
		background "gfx/2d/select"	// q3a selected shader (yellow)
		//for a specific color, use :
		//background "gfx/2d/selectAlpha"
		//color 1 0 0 1
	}
	
	Icon_Head
	{
		name "StatusBar_Head"
		rect $evalint(185 + GIANTCHAR_WIDTH*3 + TEXT_ICON_SPACE) $evalint(SCREEN_Y_MAX + 1 - ICON_SIZE*1.25) $evalint(ICON_SIZE*1.25) $evalint(ICON_SIZE*1.25)
		cvarTest "cg_drawStatus"
	}
	
	Icon_Flag
	{
		name "StatusBar_Flag"
		rect $evalint(185 + GIANTCHAR_WIDTH*3 + TEXT_ICON_SPACE + ICON_SIZE) $evalint(SCREEN_Y_MAX + 1 - ICON_SIZE) ICON_SIZE ICON_SIZE
		cvarTest "cg_drawStatus"
	}

	itemDef
	{
		name "StatusBar_ArmorCount"
		rect $evalint(370 + GIANTCHAR_WIDTH*3) $evalint(SCREEN_Y_MAX + 1 - ICON_SIZE) NULL NULL
		font numbers
		fontsize GIANTCHAR_WIDTH GIANTCHAR_HEIGHT
		textAlign R
		proportional
		forecolor ArmorColors
		caption VAL_ARMOR
		cvarTest "cg_drawStatus"
		visible !VIS_ZERO_VALUE
	}
	*/

	//==========================
	// items displayed during spectate
	//==========================
	itemDef
	{
		name "SpecMessage"
		rect SCREEN_X_MID $evalint(SCREEN_Y_MAX - 40 + 1) NULL NULL
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		caption "SPECTATOR"
		shadow 
		proportional
		visible VIS_TEAM_SPECTATOR
	}

	itemDef
	{
		name "SpecMessageTourney"
		rect SCREEN_X_MID $evalint(SCREEN_Y_MAX - 40 - BIGCHAR_HEIGHT - 4 + 1) NULL NULL
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		caption "waiting to play"
		shadow 
		proportional
		visible VIS_TEAM_SPECTATOR VIS_GT_TOURNAMENT
	}
	
	itemDef
	{
		name "SpecMessageTeamDeathMatch"
		rect SCREEN_X_MID $evalint(SCREEN_Y_MAX - 40 - BIGCHAR_HEIGHT - 4 + 1) NULL NULL
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		caption "press ESC and use the JOIN menu to play";
		shadow 
		proportional
		visible VIS_TEAM_SPECTATOR VIS_GT_TDM
	}
	//==========================
	
	CrosshairNames
	{
		rect SCREEN_X_MID 174 NULL NULL
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		time 1000
		textAlign C
		proportional
		cvarTest "cg_drawCrosshair"
		cvarTest "cg_drawCrosshairNames"
	}
	
	StatusBar_TeamBar
	{
		rect SCREEN_X_MIN $evalint(SCREEN_Y_MAX - STATUSBAR_HEIGHT + 1) $evalint(SCREEN_X_MAX - SCREEN_X_MIN + 1) STATUSBAR_HEIGHT
		backcolor NULL NULL NULL 0.33 // only the Alpha component is used.
		background "gfx/2d/colorbar.tga"
		visible VIS_TEAM_PLAY
		cvarTest "cg_drawStatus"
	}


	
	itemDef
	{
		name "AmmoMessage"
		rect SCREEN_X_MID 64 NULL NULL
		caption "LOW AMMO WARNING"
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		cvarTest "cg_drawAmmoWarning"
		visible VIS_LOW_AMMO_WARNING
	}
	
	itemDef
	{
		name "NoAmmoMessage"
		rect SCREEN_X_MID 64 NULL NULL
		caption "OUT OF AMMO"
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		cvarTest "cg_drawAmmoWarning"
		visible VIS_OUT_OF_AMMO
	}

	//==========================
	// WeaponList
	//==========================

	// Horizontal weapons list
	WeaponList
	{
		rect SCREEN_X_MID $evalint(SCREEN_Y_MAX + 1 - STATUSBAR_HEIGHT - 40 ) NULL NULL
		fontsize AMMO_FONT_WIDTH AMMO_FONT_HEIGHT
		forecolor 1 1 1 1
		time WEAPON_SELECT_TIME //weapon select show time
		textAlign C
		proportional
	}

	// vertical WeaponList (cg_drawWeaponSelect = 3)
	WeaponList_Vertical
	{
		rect $evalint(SCREEN_X_MIN + 6) SCREEN_Y_MID NULL NULL
		fontsize AMMO_FONT_WIDTH AMMO_FONT_HEIGHT
		forecolor 1 1 1 1
		time WEAPON_SELECT_TIME
		textAlign R
		valign Middle
	}

	WeaponList_SelectedName
	{
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		shadow
		proportional
		textAlign C
		
		fontsize AMMO_FONT_WIDTH AMMO_FONT_HEIGHT
	}
	
	itemDef
	{
		name "HoldableItem"
		rect $evalint(SCREEN_X_MAX + 1 - ICON_SIZE) $evalint((SCREEN_Y_MAX-ICON_SIZE)/2) ICON_SIZE ICON_SIZE
		background ICON_HOLDABLE_ITEM
	}

	Reward
	{
		rect SCREEN_X_MID $evalint(SCREEN_Y_MIN + STATUSBAR_HEIGHT - 4) $evalint(ICON_SIZE-4) $evalint(ICON_SIZE-4) //was hardcoded 320 56 ICON_SIZE-4 ICON_SIZE-4
		fontsize SMALLCHAR_WIDTH SMALLCHAR_HEIGHT
		forecolor 1 1 1 1
		time REWARD_TIME
		textAlign C
		shadow
		cvarTest "cg_drawRewards"
	}

	TeamChat
	{
		rect CHATLOC_X CHATLOC_Y NULL NULL
		fontsize TINYCHAR_WIDTH TINYCHAR_HEIGHT
		forecolor 0 1 0 0.33
		background "gfx/2d/colorbar.tga"
		proportional
		visible VIS_TEAM_PLAY VIS_TEAM_SPECTATOR
	}

	VoteMessageArena
	{
		rect $evalint(SCREEN_X_MIN - 0) $evalint(SCREEN_Y_MIN + 58) NULL NULL
		fontsize SMALLCHAR_WIDTH SMALLCHAR_HEIGHT
		forecolor 1 1 1 1
		proportional
		//shadow ?
	}

	VoteMessageWorld
	{
		rect SCREEN_X_MIN 90 NULL NULL
		fontsize SMALLCHAR_WIDTH SMALLCHAR_HEIGHT
		forecolor 1 1 1 1
		proportional
		//shadow ?
	}

	NetGraph
	{
		rect $evalint(SCREEN_X_MAX + 1 - 48) $evalint(SCREEN_Y_MAX + 1 - 48) 48 48 // for a larger graph: 108 48
		fontsize 5 10
		forecolor 1 1 1 1
		Fill true
		textAlign R
		proportional
		cvarTest "cg_lagometer"
		visible !VIS_LOCAL_SERVER
	}

	NetGraphPing
	{
		rect $evalint(SCREEN_X_MAX + 1 - 48) $evalint(SCREEN_Y_MAX + 1 - 48) 48 48 //q3A default: same as NetGraph
		fontsize 5 10
		forecolor 1 1 1 1
		proportional
		cvarTest "cg_drawPing"
		visible !VIS_LOCAL_SERVER
	}
	
	// upper right
	TeamOverlay
	{
		rect $evalint(SCREEN_X_MAX + 1 - ((TEAM_OVERLAY_MAXNAME_WIDTH + TEAM_OVERLAY_MAXLOCATION_WIDTH + 4 + 7) * TINYCHAR_WIDTH)) SCREEN_Y_MIN $evalint((TEAM_OVERLAY_MAXNAME_WIDTH + TEAM_OVERLAY_MAXLOCATION_WIDTH + 4 + 7) * TINYCHAR_WIDTH) TINYCHAR_HEIGHT
		fontsize TINYCHAR_WIDTH TINYCHAR_HEIGHT
		background "gfx/2d/colorbar.tga"
		forecolor 1 1 1 1
		backcolor T
		proportional
		visible VIS_TEAM_PLAY VIS_TEAM_BLUE_OR_RED
		cvarTest "cg_drawTeamOverlay"
		
	}
	
	TeamOverlay_Selected
	{
		//background "gfx/2d/colorbar.tga"
		fontsize TINYCHAR_WIDTH TINYCHAR_HEIGHT
		forecolor 1 0.9 0.7 1
		backcolor 1 1 0 1
		proportional
	}

	itemDef
	{
		name "SnapshotMessage"
		rect SCREEN_X_MAX NULL NULL NULL
		margin 4 0 4 0
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		shadow
		textAlign R
		caption VAL_SNAPSHOT
		anchors Bottom
		parent TeamOverlay
		cvarTest "cg_drawSnapshot"
	}

	itemDef
	{
		name "FPS"
		rect SCREEN_X_MAX NULL NULL NULL
		margin 0 0 4 0
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		shadow
		textAlign R
		proportional
		caption VAL_FPS
		anchors Bottom
		parent "SnapshotMessage"
		cvarTest "cg_drawFPS"
	}

	itemDef
	{
		name "PlayerSpeed"
		rect SCREEN_X_MAX
		margin 0 0 4 0
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		shadow
		textAlign R
		proportional
		anchors Bottom Right
		parent "FPS"
		caption VAL_SPEED
		cvarTest "cg_drawSpeed"
	}

	/*itemDef
	{
		name "GameTime"
		rect SCREEN_X_MAX
		margin 0 0 4 0
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		shadow
		textAlign R
		proportional
		caption VAL_TIMER
		anchors Bottom Right
		parent "PlayerSpeed"
		cvarTest "cg_drawTimer"
	}*/
	
	Icon_Attacker
	{
		rect $evalfloat(SCREEN_X_MAX-60) 0 60 60
		time ATTACKER_HEAD_TIME
		parent "PlayerSpeed"
		anchors Bottom
		cvarTest "cg_drawAttacker"
		//icon3D
	}
	
	Attacker
	{
		margin 4 0 2 0
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 0.5
		time ATTACKER_HEAD_TIME
		textAlign R
		proportional
		
		parent Icon_Attacker	
		anchors Bottom Right
		cvarTest "cg_drawAttacker"
	}
	
	
	Score
	{
		rect $evalint(SCREEN_X_MAX + 1) $evalint(SCREEN_Y_MAX - STATUSBAR_HEIGHT) NULL NULL
		margin 4 4 4 4
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		background "gfx/2d/select" // user's team score is selected
		shadow
		textAlign R
		visible 0
	}


	itemDef
	{
		name "FollowMessage"
		caption "following"
		rect SCREEN_X_MID $evalint(SCREEN_X_MIN + 24) NULL NULL
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		shadow
		visible VIS_PMF_FOLLOW
	}

	itemDef
	{
		name "FollowName"
		rect SCREEN_X_MID $evalint(SCREEN_X_MIN + 40) NULL NULL
		fontsize GIANTCHAR_WIDTH GIANTCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		shadow
		caption VAL_FOLLOW_NAME
		visible VIS_PMF_FOLLOW
	}

	itemDef
	{
		name "WarmupInfo"
		rect SCREEN_X_MID 24 NULL NULL
		caption "Waiting for players"
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		visible !VIS_PMF_FOLLOW VIS_WARMUP
	}

	WarmupVersus
	{
		rect SCREEN_X_MID 20 NULL NULL
		fontsize GIANTCHAR_WIDTH GIANTCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		visible !VIS_PMF_FOLLOW VIS_WARMUP VIS_GT_TOURNAMENT
	}
	
	WarmupGametype
	{
		rect SCREEN_X_MID 25 NULL NULL
		fontsize GIANTCHAR_WIDTH GIANTCHAR_HEIGHT
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		visible !VIS_PMF_FOLLOW VIS_WARMUP VIS_GT_TOURNAMENT
	}

	WarmupCount
	{
		rect SCREEN_X_MID 70 NULL NULL
		fontsize 16 NULL
		forecolor 1 1 1 1
		textAlign C
		proportional
		shadow
		visible !VIS_PMF_FOLLOW VIS_WARMUP
	}
	
	KillMessage
	{
		// this message is always displayed centered
		rect NULL $evalint(SCREEN_Y_MAX * 0.30) NULL NULL
		fontsize BIGCHAR_WIDTH NULL
		forecolor 1 1 1 1
	}
	
	itemDef
	{
		name "Icon_Disconnect"
		rect $evalint(SCREEN_X_MAX + 1 - 48) $evalint(SCREEN_Y_MAX + 1 - 48) 48 48
		background "gfx/2d/net.tga"
		visible VIS_DISCONNECTED VIS_BLINK
	}
	
	itemDef
	{
		name "Message_Disconnect"
		caption  "Connection Interrupted"
		rect SCREEN_X_MID 100 NULL NULL
		forecolor 1 1 1 1
		fontsize BIGCHAR_WIDTH BIGCHAR_HEIGHT	
		shadow
		proportional
		textAlign C
		visible VIS_DISCONNECTED
	}
	
	ItemMessage  
	{
		rect NULL $evalint(SCREEN_Y_MIN + SCREEN_Y_MAX * 0.30) NULL NULL
		fontsize BIGCHAR_WIDTH NULL
		forecolor 1 1 1 1
	}
	
	WarmupFightMessage
	{
		rect NULL $evalint(SCREEN_Y_MAX * 0.25) NULL NULL
		fontsize $evalint(GIANTCHAR_WIDTH*2) NULL
		forecolor 1 1 1 1
	}
	
	ServerMessage
	{
		rect NULL $evalint(SCREEN_Y_MAX * 0.30) NULL NULL
		fontsize BIGCHAR_WIDTH NULL
		forecolor 1 1 1 1
	}

	
